--if True then \y. (let f = (\x. x) in (f (y, y), y)) else \y. (let f = (\x. x) in ((y,y), y))
--let p = True in \y. y
--let p = True in if p then \y. (let f = (\x. x) in (f y, y)) else \x.(x, p)
-- if True then \x. (x,x) else \a. (a, a)
--\y.(if y then \x. y else \a. a, True)
--\x.True

--\a.if a then a else 4

\a.\b.\c.case ((a, b), c) of 
{
    ((True, 1), False) -> let p = True in if p then b else 2;
    ((False, 0), True) -> 0

}

